{
	"info": {
		"_postman_id": "bb82a67c-4cf2-4cb8-b22c-dfb4c82f0daf",
		"name": "gorest_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el codigo 200\", () => {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    //pm.expect(pm.response.code.name).to.has('OK');\r",
							"});\r",
							"pm.test(\"Validar la respuesta en formato JSON\", () =>{\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Validar campos en el body response\", function (){\r",
							"    const responseJson = pm.response.json();\r",
							"    console.log (\"Respuesta en formato Json: \", responseJson);\r",
							"    pm.expect(responseJson.data[0].id).to.eql(1);\r",
							"    pm.expect(responseJson.data[0].name).to.be.a(\"string\");\r",
							"     pm.expect(responseJson.data[0].id).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validar la respuesta incluye un texto\", () =>{\r",
							"    console.log(\"Respuesta formato Texto: \", pm.response.text)\r",
							"    pm.expect(pm.response.text()).to.include('name')\r",
							"});\r",
							"pm.test(\"Probar code status este dentro de unos codigos\", () =>{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"pm.test(\"Validar el tiempo de respeusta menor a 1500ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/public-api/users",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"public-api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "crear usuario que falla",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el codigo 200\", () => {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    //pm.expect(pm.response.code.name).to.has('OK');\r",
							"});\r",
							"pm.test(\"Validar la respuesta en formato JSON\", () =>{\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Validar campos en el body response\", function (){\r",
							"    const responseJson = pm.response.json();\r",
							"    console.log (\"Respuesta en formato Json: \", responseJson);\r",
							"    pm.expect(responseJson.data.message).eq(\"Authentication failed\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validar la respuesta incluye un texto\", () =>{\r",
							"    console.log(\"Respuesta formato Texto: \", pm.response.text)\r",
							"    pm.expect(pm.response.text()).to.include('Authentication failed')\r",
							"});\r",
							"pm.test(\"Probar code status este dentro de unos codigos\", () =>{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"pm.test(\"Validar el tiempo de respuesta menor a 1500ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/public-api/users",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"public-api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el codigo 200\", () => {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    //pm.expect(pm.response.code.name).to.has('OK');\r",
							"});\r",
							"pm.test(\"Validar la respuesta en formato JSON\", () =>{\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Probar code status este dentro de unos codigos\", () =>{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Tenali Ramakrishna\", \r\n\"gender\":\"Male\", \r\n\"email\":\"lcarrillofraire@gmail.com\", \r\n\"status\":\"Active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url_base}}/public-api/users",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"public-api",
						"users"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "buscar Usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el codigo 200\", () => {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    //pm.expect(pm.response.code.name).to.has('OK');\r",
							"});\r",
							"pm.test(\"Validar la respuesta en formato JSON\", () =>{\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Probar code status este dentro de unos codigos\", () =>{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
							"});\r",
							"pm.test(\"Validar el tiempo de respuesta menor a 1500ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Tenali Ramakrishna\", \r\n\"gender\":\"Male\", \r\n\"email\":\"lcarrillofraire@gmail.com\", \r\n\"status\":\"Active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url_base}}/public-api/users/1457",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"public-api",
						"users",
						"1457"
					],
					"query": [
						{
							"key": "id",
							"value": "1457",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el codigo 200\", () => {\r",
							"    pm.response.to.be.ok;\r",
							"\r",
							"});\r",
							"pm.test(\"Validar la respuesta en formato JSON\", () =>{\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Luzma\", \r\n\"email\": \"lcarrillofraire@gmail.com\",\r\n\"status\":\"Active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url_base}}/public-api/users/1457",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"public-api",
						"users",
						"1457"
					],
					"query": [
						{
							"key": "id",
							"value": "1457",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el codigo 200\", () => {\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    //pm.expect(pm.response.code.name).to.has('OK');\r",
							"});\r",
							"pm.test(\"Validar la respuesta en formato JSON\", () =>{\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Validar que el data sea null\", () =>{\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(responseJson.data).is.null\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Luzma\", \r\n\"email\": \"lcarrillofraire@gmail.com\",\r\n\"status\":\"Active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url_base}}/public-api/users/1329",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"public-api",
						"users",
						"1329"
					],
					"query": [
						{
							"key": "id",
							"value": "1457",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}